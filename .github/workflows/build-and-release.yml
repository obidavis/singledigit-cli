name: Build and Release on Tag

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update && sudo apt-get install -y build-essential cmake
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            brew install cmake
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            choco install cmake
          fi

      - name: Configure project
        env:
          CMAKE_BUILD_TYPE: Release
          CMAKE_CXX_COMPILER: g++-12
        run: cmake -S . -B build

      - name: Build project
        run: cmake --build build --config Release

      - name: Run tests
        run: ctest --test-dir build

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/your_artifact.zip
          asset_name: your_artifact_${{ github.ref }}.zip
          asset_content_type: application/zip